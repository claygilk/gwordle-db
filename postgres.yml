apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: test
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  labels:
    app: postgres
data: 
  init: |
    DROP TABLE IF EXISTS solutions;

    CREATE TABLE solutions (
      word VARCHAR ( 50 ) UNIQUE NOT NULL PRIMARY KEY,
      wasUsed BOOLEAN NOT NULL
    );

    INSERT INTO 
        solutions (word, wasUsed)
    VALUES
        ('audio','false'),
        ('rogue','true'),
        ('ninja','false');

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres  # Sets Deployment name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.1 # Sets Image
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432  # Exposes container port
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---            
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-client  # Sets Deployment name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-client
  template:
    metadata:
      labels:
        app: db-client
    spec:
      restartPolicy: Always
      initContainers:
      - name: db-init
        image: postgres:10.1 
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
        # envFrom:
        #   - configMapRef:
        #       name: postgres-config
        command: ["/bin/sh"]
        args: ["-c", "PGPASSWORD=test psql -h postgres.default.svc.cluster.local -p 5432 -U admin -d postgresdb -f /etc/config/init"]  
      containers:
        - name: db-client
          image: postgres:10.1  # Sets Image
          imagePullPolicy: "IfNotPresent"
      volumes:
        - name: config-volume
          configMap:
            name: postgres-init

---
apiVersion: v1
kind: Service
metadata:
  name: postgres # Sets service name
  labels:
    app: postgres # Labels and Selectors
spec:
  type: NodePort # Sets service type
  ports:
    - port: 5432 # Sets port to run the postgres application
  selector:
    app: postgres

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume  # Sets PV's name
  labels:
    type: local  # Sets PV's type to local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi # Sets PV Volume
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "postgres-vol"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim  # Sets name of PVC
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany  # Sets read and write access
  resources:
    requests:
      storage: 1Gi  # Sets volume size
---